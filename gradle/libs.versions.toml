[versions]
# General
kotlin = "2.+"
groovy = "4.+"
springBoot = "3.+"

# Plugins
springDependencyManagementPlugin = "1.+"
openApiGeneratorPlugin = "7.12.0"
dockerSpringPlugin = "9.+"
nodePlugin = "7.+"

# Implementation
springBootJpaRsql = "6.+"
postgresql = "42.+"
h2 = "2.+"
liquibase = "4.+"
swaggerAnnotations = "2.+"
opConnect = "0.+"

# Test
spock = "2.+"
testContainers = "1.+"

[libraries]
# Kotlin
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib" }
kotlin-reflection = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
kotlin-jackson = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin" }

# Spring
springBoot-devtools = { group = "org.springframework.boot", name = "spring-boot-devtools" }
springBoot-starter = { group = "org.springframework.boot", name = "spring-boot-starter" }
springBoot-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
springBoot-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation" }
springBoot-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa" }
springBoot-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
springBoot-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
springBoot-jpaRsql = { group = "io.github.perplexhub", name = "rsql-jpa-spring-boot-starter", version.ref = "springBootJpaRsql" }

# Database
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
h2 = { group = "com.h2database", name = "h2", version.ref = "h2" }
liquibase = { group = "org.liquibase", name = "liquibase-core", version.ref = "liquibase" }

# OpenApi Generator
swaggerAnnotations = { group = "io.swagger.core.v3", name = "swagger-annotations", version.ref = "swaggerAnnotations" }

# Miscellaneous
opConnect = { group = "com.sanctionco.opconnect", name = "opconnect-java", version.ref = "opConnect" }

# Test
spock-spring = { group = "org.spockframework", name = "spock-spring", version.ref = "spock" }
groovy-all = { group = "org.apache.groovy", name = "groovy-all", version.ref = "groovy" }
testContainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testContainers" }

[bundles]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinJpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagementPlugin" }
openApiGenerator = { id = "org.openapi.generator", version.ref = "openApiGeneratorPlugin" }
dockerSpring = { id = "com.bmuschko.docker-spring-boot-application", version.ref = "dockerSpringPlugin" }
gitProperties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.2" }
node = { id = "com.github.node-gradle.node", version.ref = "nodePlugin" }
